-- Improved Auto Collect and Server Hop Script for Jujutsu Infinite
wait(5)
-- Wait until the game and character are fully loaded
local function waitForCharacter()
    while not (game:IsLoaded() and game.Players.LocalPlayer and game.Players.LocalPlayer.Character) do
        task.wait()
    end
    local character = game.Players.LocalPlayer.Character
    while not character:FindFirstChild("HumanoidRootPart") do
        task.wait()
    end
    return character
end

local character = waitForCharacter()
local player = game.Players.LocalPlayer

-- Optionally disable menu if ForceField exists
if character:FindFirstChild("ForceField") then
    game:GetService("ReplicatedStorage").Remotes.Server.Combat.ToggleMenu:FireServer(false)
end

--------------------------------------------------------------------------------
-- Server Hop Functionality
--------------------------------------------------------------------------------

local function serverHop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local nextPageCursor = ""
    local currentHour = os.date("!*t").hour

    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    
    local function fetchServerData(cursor)
        local url = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
        if cursor and cursor ~= "" then
            url = url .. "&cursor=" .. cursor
        end
        local response = game:HttpGet(url)
        return HttpService:JSONDecode(response)
    end

    local function attemptTeleport(serverData)
        for _, server in ipairs(serverData.data) do
            local serverId = tostring(server.id)
            if tonumber(server.playing) < tonumber(server.maxPlayers) then
                -- Check if this server has been used before. If first iteration,
                -- reset the list if the stored hour is different.
                local skipServer = false
                for idx, stored in ipairs(AllIDs) do
                    if idx == 1 then
                        if tonumber(stored) ~= currentHour then
                            AllIDs = { currentHour }
                        end
                    elseif serverId == stored then
                        skipServer = true
                        break
                    end
                end

                if not skipServer then
                    table.insert(AllIDs, serverId)
                    pcall(function()
                        writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
                    end)
                    TeleportService:TeleportToPlaceInstance(PlaceID, serverId, player)
                    task.wait(2) -- Wait briefly after teleport attempt
                end
            end
        end
    end

    -- Loop through pages until a valid server is found
    pcall(function()
        while task.wait() do
            local serverData = fetchServerData(nextPageCursor)
            nextPageCursor = serverData.nextPageCursor or ""
            attemptTeleport(serverData)
        end
    end)
end

--------------------------------------------------------------------------------
-- Auto-Collect Functionality
--------------------------------------------------------------------------------

local function collectItems()
    local collectedCount = 0
    local ws = game:GetService("Workspace")
    local character = player.Character or player.CharacterAdded:Wait()

    local hrp = character:WaitForChild("HumanoidRootPart", 5)
    if not hrp then return 0 end

    -- Try to get the drops folder from a known location
    local dropsFolder = ws:FindFirstChild("Objects") and ws.Objects:FindFirstChild("Drops") or ws:FindFirstChild("Drops")
    
    if dropsFolder then
        for _, prompt in ipairs(dropsFolder:GetDescendants()) do
            if prompt:IsA("ProximityPrompt") then
                local parentObject = prompt.Parent
                local targetCFrame = nil

                if parentObject:IsA("BasePart") then
                    targetCFrame = parentObject.CFrame
                elseif parentObject:IsA("Model") and parentObject.PrimaryPart then
                    targetCFrame = parentObject.PrimaryPart.CFrame
                else
                    for _, child in ipairs(parentObject:GetChildren()) do
                        if child:IsA("BasePart") then
                            targetCFrame = child.CFrame
                            break
                        end
                    end
                end

                if targetCFrame then
                    -- Move the character close to the drop and fire its prompt until it disappears
                    repeat
                        task.wait()
                        -- Ensure character exists
                        if not player.Character then
                            player.Character = player.CharacterAdded:Wait()
                            hrp = player.Character:WaitForChild("HumanoidRootPart")
                        end
                        hrp.CFrame = targetCFrame - Vector3.new(0, 4, 0)
                        fireproximityprompt(prompt)
                    until not prompt:IsDescendantOf(ws)
                    collectedCount = collectedCount + 1
                end
            end
        end
    end

    return collectedCount
end

--------------------------------------------------------------------------------
-- Handle Character Death
--------------------------------------------------------------------------------

local function setupDeathHandler()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        player.CharacterAdded:Wait()
        print("Character respawned")
    end)
end

--------------------------------------------------------------------------------
-- Main Loop
--------------------------------------------------------------------------------

spawn(function()
    setupDeathHandler()
    player.CharacterAdded:Connect(setupDeathHandler)
    
    while true do
        local itemsCollected = collectItems()
        if itemsCollected > 0 then
            print(itemsCollected .. " items collected!")
            serverHop()
        end
        task.wait(1)
    end
end)

print("Auto collect and server hop script is running!")
queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/localplayer12/Roblox/refs/heads/main/Auto", true))()')
