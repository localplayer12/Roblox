-- Auto Collect and Server Hop Script for Jujutsu Infinite


repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character:FindFirstChild("ForceField") then
    game:GetService("ReplicatedStorage").Remotes.Server.Combat.ToggleMenu:FireServer(false)
end

local function serverHop()
    local Time = 1 -- seconds
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    
    function TPReturner()
        local Site
        if foundAnything == "" then
            Site = game:GetService("HttpService"):JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game:GetService("HttpService"):JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        
        local ID = ""
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        
        local num = 0
        for i, v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _, Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(2) -- Reduced from 4 to 2 for faster hopping
                end
            end
        end
    end
    
    pcall(function()
        while task.wait() do
            TPReturner()
        end;
    end)
end


-- Auto collect functionality
local function collectItems()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    
    -- Wait for character to be fully loaded if needed
    if not character:FindFirstChild("HumanoidRootPart") then
        repeat wait(0.1) 
        until character:FindFirstChild("HumanoidRootPart")
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return 0 end
    
    local drops = game:GetService("Workspace"):FindFirstChild("Objects")
    local originalPosition = humanoidRootPart.CFrame
    local itemsCollected = 0
    
    -- Collect from Object Drops
    if drops then
        local dropsFolder = drops:FindFirstChild("Drops") or workspace:FindFirstChild("Drops")
        
        if dropsFolder then
            for _, descendant in ipairs(dropsFolder:GetDescendants()) do
                if descendant:IsA("ProximityPrompt") then
                    local parentObject = descendant.Parent
                    if parentObject then
                        local targetPosition
                        
                        if parentObject:IsA("BasePart") then
                            targetPosition = parentObject.CFrame
                        elseif parentObject:IsA("Model") and parentObject.PrimaryPart then
                            targetPosition = parentObject.PrimaryPart.CFrame
                        else
                            for _, child in pairs(parentObject:GetChildren()) do
                                if child:IsA("BasePart") then
                                    targetPosition = child.CFrame
                                    break
                                end
                            end
                        end
                        
                        if targetPosition then
                            repeat task.wait()
                                -- Check if character still exists (in case of death during collection)
                                character = player.Character
                                if not character then
                                    character = player.CharacterAdded:Wait()
                                    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                                end
                                
                                humanoidRootPart.CFrame = targetPosition - Vector3.new(0, 7, 0)
                                fireproximityprompt(descendant)
                            until not descendant:IsDescendantOf(workspace)
                            itemsCollected = itemsCollected + 1
                        end
                    end
                end
            end
        end
    end
    
    -- Return to original position
    character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = originalPosition
    end
    
    return itemsCollected
end

-- Handle character death
local function setupDeathHandler()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        -- Wait for respawn
        player.CharacterAdded:Wait()
        -- Character has respawned
        print("Character respawned")
    end)
end

-- Main loop
spawn(function()
    -- Setup death handler
    setupDeathHandler()
    game.Players.LocalPlayer.CharacterAdded:Connect(setupDeathHandler)
    
    local noItemsCount = 0
    
    while true do
        local itemsCollected = collectItems()
        
        if itemsCollected > 0 then
            noItemsCount = 0
            print(itemsCollected .. " items have been collected!")
            serverHop()
        end
    end
end)

print("Auto collect and server hop script is running!")
